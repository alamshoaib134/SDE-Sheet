# Stack class.
class Stack:
    size = 0
    lst = []
    topp = -1
    def __init__(self, capacity: int):
        # Write your code here.
        self.lst = [0]*capacity
        self.topp = -1
        self.size = capacity
        

    def push(self, num: int) -> None:
        # Write your code here.
        if self.topp != self.size:
            self.topp+=1
            self.lst[self.topp] = num

    def pop(self) -> int:
        if self.topp != -1:
            x = self.lst[self.topp]
            self.topp-=1
            return x
        return -1
            
    
    def top(self) -> int:
        if self.topp!=-1:
            return self.lst[self.topp]
        return -1
    
    def isEmpty(self) -> int:
        if self.topp == -1:
            return 1
        return 0
    
    def isFull(self) -> int:
        if self.topp == self.size:
            return 1
        return 0
