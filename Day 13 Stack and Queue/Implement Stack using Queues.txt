class MyStack:

    def __init__(self):
        self.stk = []
        self.kts = []
        

    def push(self, x: int) -> None:
        self.stk.append(x)
        

    def pop(self) -> int:
        self.kts= []
        for i in range(len(self.stk)):
            self.kts.append(self.stk.pop())
        x = self.kts.pop(0)
        for i in range(len(self.kts)):
            self.stk.append(self.kts.pop())
        return x
        
        
        

    def top(self) -> int:
        for i in range(len(self.stk)):
            self.kts.append(self.stk.pop())
        x = self.kts[0]
        for i in range(len(self.kts)):
            self.stk.append(self.kts.pop())
        return x
        

    def empty(self) -> bool:
        if len(self.stk)==0:
            return True
        return False
        


# Your MyStack object will be instantiated and called as such:
# obj = MyStack()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.top()
# param_4 = obj.empty()