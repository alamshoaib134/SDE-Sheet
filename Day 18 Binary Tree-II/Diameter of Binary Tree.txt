# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def diameterOfBinaryTree(self, root: Optional[TreeNode]) -> int:
        ans = [-99999999999]
        def height(root,ans):
            l_h = 0
            l_r = 0
            if root is None:
                return 0
            if root.left:
                l_h = height(root.left,ans)
            if root.right:
                l_r = height(root.right,ans)
            ans[0] = max(ans[0],1+l_h+l_r)
                
            return 1+max(l_h,l_r)
        if root is None:
            return 0
        
        height(root,ans)
        return ans[0]-1
            